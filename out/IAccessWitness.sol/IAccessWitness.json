{"abi":[{"type":"function","name":"approve","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"contentId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"contentId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface defines the methods to approve conditions for accounts and content IDs.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"This function approves the condition and returns a boolean indicating the result.\",\"params\":{\"account\":\"The address of the account to approve.\",\"contentId\":\"The content ID to approve against.\"},\"returns\":{\"_0\":\"bool True if the condition is approved, false otherwise.\"}}},\"title\":\"IAccessWitness\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Approves a specific condition for an account and content ID.\"}},\"notice\":\"Interface for an access witness that manages approval of conditions for content.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAccessWitness.sol\":\"IAccessWitness\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAccessWitness.sol\":{\"keccak256\":\"0x2ffe6dcfbd893d0e4c2827f48880009628393bf732b491b77b509166665b67ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4d14eae10f756db1793bd9befde4b1200a3dd9c2e4dcc15008fd5df8285c9b4\",\"dweb:/ipfs/Qmf79thrQjVhT1zHToNABLtHGFUDLyDCp81raMUWQ2YksJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"contentId","type":"uint256"}],"stateMutability":"view","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"This function approves the condition and returns a boolean indicating the result.","params":{"account":"The address of the account to approve.","contentId":"The content ID to approve against."},"returns":{"_0":"bool True if the condition is approved, false otherwise."}}},"version":1},"userdoc":{"kind":"user","methods":{"approve(address,uint256)":{"notice":"Approves a specific condition for an account and content ID."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/IAccessWitness.sol":"IAccessWitness"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"contracts/interfaces/IAccessWitness.sol":{"keccak256":"0x2ffe6dcfbd893d0e4c2827f48880009628393bf732b491b77b509166665b67ee","urls":["bzz-raw://b4d14eae10f756db1793bd9befde4b1200a3dd9c2e4dcc15008fd5df8285c9b4","dweb:/ipfs/Qmf79thrQjVhT1zHToNABLtHGFUDLyDCp81raMUWQ2YksJ"],"license":"MIT"}},"version":1},"id":20}
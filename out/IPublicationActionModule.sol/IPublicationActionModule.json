{"abi":[{"type":"function","name":"initializePublicationAction","inputs":[{"name":"profileId","type":"uint256","internalType":"uint256"},{"name":"pubId","type":"uint256","internalType":"uint256"},{"name":"transactionExecutor","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"processPublicationAction","inputs":[{"name":"processActionParams","type":"tuple","internalType":"struct Types.ProcessActionParams","components":[{"name":"publicationActedProfileId","type":"uint256","internalType":"uint256"},{"name":"publicationActedId","type":"uint256","internalType":"uint256"},{"name":"actorProfileId","type":"uint256","internalType":"uint256"},{"name":"actorProfileOwner","type":"address","internalType":"address"},{"name":"transactionExecutor","type":"address","internalType":"address"},{"name":"referrerProfileIds","type":"uint256[]","internalType":"uint256[]"},{"name":"referrerPubIds","type":"uint256[]","internalType":"uint256[]"},{"name":"referrerPubTypes","type":"uint8[]","internalType":"enum Types.PublicationType[]"},{"name":"actionModuleData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"initializePublicationAction(uint256,uint256,address,bytes)":"0b960220","processPublicationAction((uint256,uint256,uint256,address,address,uint256[],uint256[],uint8[],bytes))":"90ce6e08"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"profileId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pubId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"transactionExecutor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initializePublicationAction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"publicationActedProfileId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicationActedId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actorProfileId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"actorProfileOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"transactionExecutor\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"referrerProfileIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"referrerPubIds\",\"type\":\"uint256[]\"},{\"internalType\":\"enum Types.PublicationType[]\",\"name\":\"referrerPubTypes\",\"type\":\"uint8[]\"},{\"internalType\":\"bytes\",\"name\":\"actionModuleData\",\"type\":\"bytes\"}],\"internalType\":\"struct Types.ProcessActionParams\",\"name\":\"processActionParams\",\"type\":\"tuple\"}],\"name\":\"processPublicationAction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Lens Protocol\",\"kind\":\"dev\",\"methods\":{\"initializePublicationAction(uint256,uint256,address,bytes)\":{\"custom:permissions\":\"LensHub.\",\"params\":{\"data\":\"Arbitrary data passed from the user to be decoded by the Action Module during initialization.\",\"profileId\":\"The profile ID of the author publishing the content with this Publication Action.\",\"pubId\":\"The publication ID being published.\",\"transactionExecutor\":\"The address of the transaction executor (e.g. for any funds to transferFrom).\"},\"returns\":{\"_0\":\"bytes Any custom ABI-encoded data. This will be a LensHub event params that can be used by indexers or UIs.\"}},\"processPublicationAction((uint256,uint256,uint256,address,address,uint256[],uint256[],uint8[],bytes))\":{\"custom:permissions\":\"LensHub.\",\"params\":{\"processActionParams\":\"The parameters needed to execute the publication action.\"},\"returns\":{\"_0\":\"bytes Any custom ABI-encoded data. This will be a LensHub event params that can be used by indexers or UIs.\"}}},\"title\":\"IPublicationAction\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initializePublicationAction(uint256,uint256,address,bytes)\":{\"notice\":\"Initializes the action module for the given publication being published with this Action module.\"},\"processPublicationAction((uint256,uint256,uint256,address,address,uint256[],uint256[],uint8[],bytes))\":{\"notice\":\"Processes the action for a given publication. This includes the action's logic and any monetary/token operations.\"}},\"notice\":\"This is the standard interface for all Lens-compatible Publication Actions. Publication action modules allow users to execute actions directly from a publication, like:  - Minting NFTs.  - Collecting a publication.  - Sending funds to the publication author (e.g. tipping).  - Etc. Referrers are supported, so any publication or profile that references the publication can receive a share from the publication's action if the action module supports it.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/lens/interfaces/IPublicationActionModule.sol\":\"IPublicationActionModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/modules/lens/interfaces/IPublicationActionModule.sol\":{\"keccak256\":\"0x754c777e58057a2baea06613797629706069d8626a20dbc887c790855c578819\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd68c349fb217eeb35e4c9125bcaf9b90ceeb2209caf2b0f9470da323b2c66e5\",\"dweb:/ipfs/QmVEDeyH3Vn5fe4d56JC6pyjHSf6y4q7pvAAo2uikHZsst\"]},\"contracts/modules/lens/libraries/Types.sol\":{\"keccak256\":\"0x10246499ff11bf99115af186dad689729e3f70a19b97c0365541de5eee740c11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074dbefc1eb74675e6692185d1ebda634b146fafc5ae75d2d7c9a09edacc5255\",\"dweb:/ipfs/QmYPXc1UbYp1nQ3VyhvoRxvtEdnKsw9ecrsYxDB5dMA3E2\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"profileId","type":"uint256"},{"internalType":"uint256","name":"pubId","type":"uint256"},{"internalType":"address","name":"transactionExecutor","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"initializePublicationAction","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"struct Types.ProcessActionParams","name":"processActionParams","type":"tuple","components":[{"internalType":"uint256","name":"publicationActedProfileId","type":"uint256"},{"internalType":"uint256","name":"publicationActedId","type":"uint256"},{"internalType":"uint256","name":"actorProfileId","type":"uint256"},{"internalType":"address","name":"actorProfileOwner","type":"address"},{"internalType":"address","name":"transactionExecutor","type":"address"},{"internalType":"uint256[]","name":"referrerProfileIds","type":"uint256[]"},{"internalType":"uint256[]","name":"referrerPubIds","type":"uint256[]"},{"internalType":"enum Types.PublicationType[]","name":"referrerPubTypes","type":"uint8[]"},{"internalType":"bytes","name":"actionModuleData","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"processPublicationAction","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]}],"devdoc":{"kind":"dev","methods":{"initializePublicationAction(uint256,uint256,address,bytes)":{"custom:permissions":"LensHub.","params":{"data":"Arbitrary data passed from the user to be decoded by the Action Module during initialization.","profileId":"The profile ID of the author publishing the content with this Publication Action.","pubId":"The publication ID being published.","transactionExecutor":"The address of the transaction executor (e.g. for any funds to transferFrom)."},"returns":{"_0":"bytes Any custom ABI-encoded data. This will be a LensHub event params that can be used by indexers or UIs."}},"processPublicationAction((uint256,uint256,uint256,address,address,uint256[],uint256[],uint8[],bytes))":{"custom:permissions":"LensHub.","params":{"processActionParams":"The parameters needed to execute the publication action."},"returns":{"_0":"bytes Any custom ABI-encoded data. This will be a LensHub event params that can be used by indexers or UIs."}}},"version":1},"userdoc":{"kind":"user","methods":{"initializePublicationAction(uint256,uint256,address,bytes)":{"notice":"Initializes the action module for the given publication being published with this Action module."},"processPublicationAction((uint256,uint256,uint256,address,address,uint256[],uint256[],uint8[],bytes))":{"notice":"Processes the action for a given publication. This includes the action's logic and any monetary/token operations."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/modules/lens/interfaces/IPublicationActionModule.sol":"IPublicationActionModule"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"contracts/modules/lens/interfaces/IPublicationActionModule.sol":{"keccak256":"0x754c777e58057a2baea06613797629706069d8626a20dbc887c790855c578819","urls":["bzz-raw://bd68c349fb217eeb35e4c9125bcaf9b90ceeb2209caf2b0f9470da323b2c66e5","dweb:/ipfs/QmVEDeyH3Vn5fe4d56JC6pyjHSf6y4q7pvAAo2uikHZsst"],"license":"MIT"},"contracts/modules/lens/libraries/Types.sol":{"keccak256":"0x10246499ff11bf99115af186dad689729e3f70a19b97c0365541de5eee740c11","urls":["bzz-raw://074dbefc1eb74675e6692185d1ebda634b146fafc5ae75d2d7c9a09edacc5255","dweb:/ipfs/QmYPXc1UbYp1nQ3VyhvoRxvtEdnKsw9ecrsYxDB5dMA3E2"],"license":"MIT"}},"version":1},"id":61}
{"abi":[{"type":"function","name":"getFees","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"setFees","inputs":[{"name":"newTreasuryFee","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFees","inputs":[{"name":"newTreasuryFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getFees(address)":"9af608c9","setFees(uint256)":"3d18678e","setFees(uint256,address)":"3d162cdc"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTreasuryFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTreasuryFee\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getFees(address)\":{\"params\":{\"token\":\"The address of the token.\"},\"returns\":{\"_0\":\"The treasury fee.\"}},\"setFees(uint256)\":{\"params\":{\"newTreasuryFee\":\"The new treasury fee.\"}},\"setFees(uint256,address)\":{\"params\":{\"newTreasuryFee\":\"The new treasury fee %.\",\"token\":\"The token to set the fees.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getFees(address)\":{\"notice\":\"Returns the current treasury fee %. \"},\"setFees(uint256)\":{\"notice\":\"Sets a new treasury fee.Only the owner can call this function.\"},\"setFees(uint256,address)\":{\"notice\":\"Sets a new treasury fee.Only the owner can call this function.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFeesManager.sol\":\"IFeesManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IFeesManager.sol\":{\"keccak256\":\"0xa26d580171ad72f2ce29ee7a34968d8fbeb17fa6c5d24fa94443b8a6e035eca5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e20e4c69259fd9d4ac6550acc8e1c1382c36497c6fc3e0489b0ff8ea5e1285e2\",\"dweb:/ipfs/QmdoihtdfsHVXKjYbhaM3YYEhgcnuiMVVtcTw9NK4FBNK2\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"getFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTreasuryFee","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setFees"},{"inputs":[{"internalType":"uint256","name":"newTreasuryFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setFees"}],"devdoc":{"kind":"dev","methods":{"getFees(address)":{"params":{"token":"The address of the token."},"returns":{"_0":"The treasury fee."}},"setFees(uint256)":{"params":{"newTreasuryFee":"The new treasury fee."}},"setFees(uint256,address)":{"params":{"newTreasuryFee":"The new treasury fee %.","token":"The token to set the fees."}}},"version":1},"userdoc":{"kind":"user","methods":{"getFees(address)":{"notice":"Returns the current treasury fee %. "},"setFees(uint256)":{"notice":"Sets a new treasury fee.Only the owner can call this function."},"setFees(uint256,address)":{"notice":"Sets a new treasury fee.Only the owner can call this function."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/IFeesManager.sol":"IFeesManager"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"contracts/interfaces/IFeesManager.sol":{"keccak256":"0xa26d580171ad72f2ce29ee7a34968d8fbeb17fa6c5d24fa94443b8a6e035eca5","urls":["bzz-raw://e20e4c69259fd9d4ac6550acc8e1c1382c36497c6fc3e0489b0ff8ea5e1285e2","dweb:/ipfs/QmdoihtdfsHVXKjYbhaM3YYEhgcnuiMVVtcTw9NK4FBNK2"],"license":"MIT"}},"version":1},"id":28}
{"abi":[{"type":"function","name":"getEndpoint","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getFees","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isCurrencySupported","inputs":[{"name":"currency","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"negotiate","inputs":[{"name":"fees","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"setFees","inputs":[{"name":"newTreasuryFee","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFees","inputs":[{"name":"newTreasuryFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFloor","inputs":[{"name":"currency","type":"address","internalType":"address"},{"name":"minimum","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportedCurrencies","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"updateEndpoint","inputs":[{"name":"_endpoint","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getEndpoint()":"aed8e967","getFees(address)":"9af608c9","getManager()":"d5009584","isCurrencySupported(address)":"70dfaeca","negotiate(uint256,address)":"d4ceb418","setFees(uint256)":"3d18678e","setFees(uint256,address)":"3d162cdc","setFloor(address,uint256)":"c99c7d93","supportedCurrencies()":"2c58824c","updateEndpoint(string)":"5c019d2e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getEndpoint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"isCurrencySupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"negotiate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTreasuryFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTreasuryFee\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"}],\"name\":\"setFloor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supportedCurrencies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_endpoint\",\"type\":\"string\"}],\"name\":\"updateEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getEndpoint()\":{\"details\":\"This function allows users to view the current endpoint of the distributor.\",\"returns\":{\"_0\":\"The current endpoint of the distributor.\"}},\"getFees(address)\":{\"params\":{\"token\":\"The address of the token.\"},\"returns\":{\"_0\":\"The treasury fee.\"}},\"getManager()\":{\"details\":\"This function allows users to view the current manager of the distributor.\",\"returns\":{\"_0\":\"The address of the current manager of the distributor.\"}},\"isCurrencySupported(address)\":{\"params\":{\"currency\":\"The address of the currency to check.\"},\"returns\":{\"_0\":\"bool True if the currency is supported, false otherwise.\"}},\"negotiate(uint256,address)\":{\"params\":{\"currency\":\"The currency in which the fees are proposed.\",\"fees\":\"The initial fee amount proposed.\"},\"returns\":{\"_0\":\"acceptedFees The final fee amount after adjustment, ensuring it meets the floor value.\"}},\"setFees(uint256)\":{\"params\":{\"newTreasuryFee\":\"The new treasury fee.\"}},\"setFees(uint256,address)\":{\"params\":{\"newTreasuryFee\":\"The new treasury fee %.\",\"token\":\"The token to set the fees.\"}},\"setFloor(address,uint256)\":{\"params\":{\"currency\":\"The address of the token for which the floor value is being set.\",\"minimum\":\"The minimum fee that can be proposed for the given currency.\"}},\"supportedCurrencies()\":{\"returns\":{\"_0\":\"address[] An array of addresses representing the supported currencies.\"}},\"updateEndpoint(string)\":{\"details\":\"This function can only be called by the owner of the contract.\",\"params\":{\"_endpoint\":\"The new distributor's endpoint.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getEndpoint()\":{\"notice\":\"Retrieves the endpoint of the distributor.\"},\"getFees(address)\":{\"notice\":\"Returns the current treasury fee %. \"},\"getManager()\":{\"notice\":\"Retrieves the manager of the distributor.\"},\"isCurrencySupported(address)\":{\"notice\":\"Checks if a given currency is supported.\"},\"negotiate(uint256,address)\":{\"notice\":\"Proposes a fee to the distributor by adjusting it according to a predefined floor value.\"},\"setFees(uint256)\":{\"notice\":\"Sets a new treasury fee.Only the owner can call this function.\"},\"setFees(uint256,address)\":{\"notice\":\"Sets a new treasury fee.Only the owner can call this function.\"},\"setFloor(address,uint256)\":{\"notice\":\"Sets the minimum floor value for fees associated with a specific currency.\"},\"supportedCurrencies()\":{\"notice\":\"Returns a list of all supported currencies.\"},\"updateEndpoint(string)\":{\"notice\":\"Updates the endpoint of the current distributor.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDistributor.sol\":\"IDistributor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/ICurrencyManager.sol\":{\"keccak256\":\"0x76294a273996a811186b39324dbf4ed82a2ca19a09972cb5969c694f7937d544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516a82b791dfd4c812e8fd176b630d8da6e7a25a26aecc5f4458666cb7369297\",\"dweb:/ipfs/QmRwHEx7KfkqbaMZoyZ366VWvusUWe2zPKTJvLGzepfNwe\"]},\"contracts/interfaces/IDistributor.sol\":{\"keccak256\":\"0x7cd85b7c1443976b5b55b61ef2cb3d309a1ef3476b8bf46cf3b9cb5a6cedc57f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1675f589027eba61be07a5b7545a541944092199ea9d140c3b38c8015b791ec\",\"dweb:/ipfs/QmcZNAe7SsCPKiZE9Jfnez6iwEPGfBpUapBKyWdLm3QMiL\"]},\"contracts/interfaces/IFeesManager.sol\":{\"keccak256\":\"0xa26d580171ad72f2ce29ee7a34968d8fbeb17fa6c5d24fa94443b8a6e035eca5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e20e4c69259fd9d4ac6550acc8e1c1382c36497c6fc3e0489b0ff8ea5e1285e2\",\"dweb:/ipfs/QmdoihtdfsHVXKjYbhaM3YYEhgcnuiMVVtcTw9NK4FBNK2\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"getEndpoint","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"getFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getManager","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"currency","type":"address"}],"stateMutability":"view","type":"function","name":"isCurrencySupported","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"fees","type":"uint256"},{"internalType":"address","name":"currency","type":"address"}],"stateMutability":"view","type":"function","name":"negotiate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTreasuryFee","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setFees"},{"inputs":[{"internalType":"uint256","name":"newTreasuryFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setFees"},{"inputs":[{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"minimum","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setFloor"},{"inputs":[],"stateMutability":"view","type":"function","name":"supportedCurrencies","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"_endpoint","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"updateEndpoint"}],"devdoc":{"kind":"dev","methods":{"getEndpoint()":{"details":"This function allows users to view the current endpoint of the distributor.","returns":{"_0":"The current endpoint of the distributor."}},"getFees(address)":{"params":{"token":"The address of the token."},"returns":{"_0":"The treasury fee."}},"getManager()":{"details":"This function allows users to view the current manager of the distributor.","returns":{"_0":"The address of the current manager of the distributor."}},"isCurrencySupported(address)":{"params":{"currency":"The address of the currency to check."},"returns":{"_0":"bool True if the currency is supported, false otherwise."}},"negotiate(uint256,address)":{"params":{"currency":"The currency in which the fees are proposed.","fees":"The initial fee amount proposed."},"returns":{"_0":"acceptedFees The final fee amount after adjustment, ensuring it meets the floor value."}},"setFees(uint256)":{"params":{"newTreasuryFee":"The new treasury fee."}},"setFees(uint256,address)":{"params":{"newTreasuryFee":"The new treasury fee %.","token":"The token to set the fees."}},"setFloor(address,uint256)":{"params":{"currency":"The address of the token for which the floor value is being set.","minimum":"The minimum fee that can be proposed for the given currency."}},"supportedCurrencies()":{"returns":{"_0":"address[] An array of addresses representing the supported currencies."}},"updateEndpoint(string)":{"details":"This function can only be called by the owner of the contract.","params":{"_endpoint":"The new distributor's endpoint."}}},"version":1},"userdoc":{"kind":"user","methods":{"getEndpoint()":{"notice":"Retrieves the endpoint of the distributor."},"getFees(address)":{"notice":"Returns the current treasury fee %. "},"getManager()":{"notice":"Retrieves the manager of the distributor."},"isCurrencySupported(address)":{"notice":"Checks if a given currency is supported."},"negotiate(uint256,address)":{"notice":"Proposes a fee to the distributor by adjusting it according to a predefined floor value."},"setFees(uint256)":{"notice":"Sets a new treasury fee.Only the owner can call this function."},"setFees(uint256,address)":{"notice":"Sets a new treasury fee.Only the owner can call this function."},"setFloor(address,uint256)":{"notice":"Sets the minimum floor value for fees associated with a specific currency."},"supportedCurrencies()":{"notice":"Returns a list of all supported currencies."},"updateEndpoint(string)":{"notice":"Updates the endpoint of the current distributor."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/IDistributor.sol":"IDistributor"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"contracts/interfaces/ICurrencyManager.sol":{"keccak256":"0x76294a273996a811186b39324dbf4ed82a2ca19a09972cb5969c694f7937d544","urls":["bzz-raw://516a82b791dfd4c812e8fd176b630d8da6e7a25a26aecc5f4458666cb7369297","dweb:/ipfs/QmRwHEx7KfkqbaMZoyZ366VWvusUWe2zPKTJvLGzepfNwe"],"license":"MIT"},"contracts/interfaces/IDistributor.sol":{"keccak256":"0x7cd85b7c1443976b5b55b61ef2cb3d309a1ef3476b8bf46cf3b9cb5a6cedc57f","urls":["bzz-raw://b1675f589027eba61be07a5b7545a541944092199ea9d140c3b38c8015b791ec","dweb:/ipfs/QmcZNAe7SsCPKiZE9Jfnez6iwEPGfBpUapBKyWdLm3QMiL"],"license":"MIT"},"contracts/interfaces/IFeesManager.sol":{"keccak256":"0xa26d580171ad72f2ce29ee7a34968d8fbeb17fa6c5d24fa94443b8a6e035eca5","urls":["bzz-raw://e20e4c69259fd9d4ac6550acc8e1c1382c36497c6fc3e0489b0ff8ea5e1285e2","dweb:/ipfs/QmdoihtdfsHVXKjYbhaM3YYEhgcnuiMVVtcTw9NK4FBNK2"],"license":"MIT"}},"version":1},"id":27}